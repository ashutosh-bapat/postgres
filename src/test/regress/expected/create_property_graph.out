CREATE SCHEMA create_property_graph_tests;
GRANT USAGE ON SCHEMA create_property_graph_tests TO PUBLIC;
SET search_path = create_property_graph_tests;
CREATE ROLE regress_graph_user1;
CREATE ROLE regress_graph_user2;
CREATE PROPERTY GRAPH g1;
COMMENT ON PROPERTY GRAPH g1 IS 'a graph';
CREATE PROPERTY GRAPH g1;  -- error: duplicate
ERROR:  relation "g1" already exists
CREATE TABLE t1 (a int, b text);
CREATE TABLE t2 (i int PRIMARY KEY, j int, k int);
CREATE TABLE t3 (x int, y text, z text);
CREATE TABLE e1 (a int, i int, t text, PRIMARY KEY (a, i));
CREATE TABLE e2 (a int, x int, t text);
CREATE PROPERTY GRAPH g2
    VERTEX TABLES (t1 KEY (a), t2 DEFAULT LABEL, t3 KEY (x) LABEL t3l1 LABEL t3l2)
    EDGE TABLES (
        e1
            SOURCE KEY (a) REFERENCES t1 (a)
            DESTINATION KEY (i) REFERENCES t2 (i),
        e2 KEY (a, x)
            SOURCE KEY (a) REFERENCES t1 (a)
            DESTINATION KEY (x, t) REFERENCES t3 (x, y)
    );
-- like g2 but assembled with ALTER
CREATE PROPERTY GRAPH g3;
ALTER PROPERTY GRAPH g3 ADD VERTEX TABLES (t1 KEY (a), t2 DEFAULT LABEL);
ALTER PROPERTY GRAPH g3
    ADD VERTEX TABLES (t3 KEY (x) LABEL t3l1 LABEL t3l2)
    ADD EDGE TABLES (
        e1 SOURCE KEY (a) REFERENCES t1 (a) DESTINATION KEY (i) REFERENCES t2 (i),
        e2 KEY (a, x) SOURCE KEY (a) REFERENCES t1 (a) DESTINATION KEY (x, t) REFERENCES t3 (x, y)
    );
ALTER PROPERTY GRAPH g3 DROP VERTEX TABLES (t2);  -- fail (TODO: dubious error message)
ERROR:  cannot drop element t2 in table t2 because other objects depend on it
DETAIL:  element e1 in table e1 depends on element t2 in table t2
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
ALTER PROPERTY GRAPH g3 DROP VERTEX TABLES (t2) CASCADE;
NOTICE:  drop cascades to element e1 in table e1
ALTER PROPERTY GRAPH g3 DROP EDGE TABLES (e2);
-- error cases
CREATE PROPERTY GRAPH gx VERTEX TABLES (xx, yy);
ERROR:  relation "xx" does not exist
CREATE PROPERTY GRAPH gx VERTEX TABLES (t1 KEY (a), t2 KEY (i), t1 KEY (a));
ERROR:  alias "t1" used more than once as element table
LINE 1: ...Y GRAPH gx VERTEX TABLES (t1 KEY (a), t2 KEY (i), t1 KEY (a)...
                                                             ^
CREATE PROPERTY GRAPH gx
    VERTEX TABLES (t1 AS tt KEY (a), t2 KEY (i))
    EDGE TABLES (
        e1 SOURCE t1 DESTINATION t2
    );
ERROR:  source vertex "t1" of edge "e1" does not exist
LINE 4:         e1 SOURCE t1 DESTINATION t2
                ^
CREATE PROPERTY GRAPH gx
    VERTEX TABLES (t1 KEY (a), t2 KEY (i))
    EDGE TABLES (
        e1 SOURCE t1 DESTINATION tx
    );
ERROR:  destination vertex "tx" of edge "e1" does not exist
LINE 4:         e1 SOURCE t1 DESTINATION tx
                ^
COMMENT ON PROPERTY GRAPH gx IS 'not a graph';
ERROR:  relation "gx" does not exist
ALTER PROPERTY GRAPH g1 OWNER TO regress_graph_user1;
SET ROLE regress_graph_user1;
GRANT SELECT ON PROPERTY GRAPH g1 TO regress_graph_user2;
GRANT UPDATE ON PROPERTY GRAPH g1 TO regress_graph_user2;  -- fail
ERROR:  invalid privilege type UPDATE for property graph
RESET ROLE;
-- information schema
SELECT * FROM information_schema.property_graphs ORDER BY property_graph_name;
 property_graph_catalog |    property_graph_schema    | property_graph_name 
------------------------+-----------------------------+---------------------
 regression             | create_property_graph_tests | g1
 regression             | create_property_graph_tests | g2
 regression             | create_property_graph_tests | g3
(3 rows)

SELECT * FROM information_schema.pg_element_tables ORDER BY property_graph_name, element_table_alias;
 property_graph_catalog |    property_graph_schema    | property_graph_name | element_table_alias | element_table_kind | table_catalog |        table_schema         | table_name | element_table_definition 
------------------------+-----------------------------+---------------------+---------------------+--------------------+---------------+-----------------------------+------------+--------------------------
 regression             | create_property_graph_tests | g2                  | e1                  | EDGE               | regression    | create_property_graph_tests | e1         | 
 regression             | create_property_graph_tests | g2                  | e2                  | EDGE               | regression    | create_property_graph_tests | e2         | 
 regression             | create_property_graph_tests | g2                  | t1                  | VERTEX             | regression    | create_property_graph_tests | t1         | 
 regression             | create_property_graph_tests | g2                  | t2                  | VERTEX             | regression    | create_property_graph_tests | t2         | 
 regression             | create_property_graph_tests | g2                  | t3                  | VERTEX             | regression    | create_property_graph_tests | t3         | 
 regression             | create_property_graph_tests | g3                  | t1                  | VERTEX             | regression    | create_property_graph_tests | t1         | 
 regression             | create_property_graph_tests | g3                  | t3                  | VERTEX             | regression    | create_property_graph_tests | t3         | 
(7 rows)

SELECT * FROM information_schema.pg_element_table_key_columns ORDER BY property_graph_name, element_table_alias, ordinal_position;
 property_graph_catalog |    property_graph_schema    | property_graph_name | element_table_alias | column_name | ordinal_position 
------------------------+-----------------------------+---------------------+---------------------+-------------+------------------
 regression             | create_property_graph_tests | g2                  | e1                  | a           |                1
 regression             | create_property_graph_tests | g2                  | e1                  | i           |                2
 regression             | create_property_graph_tests | g2                  | e2                  | a           |                1
 regression             | create_property_graph_tests | g2                  | e2                  | x           |                2
 regression             | create_property_graph_tests | g2                  | t1                  | a           |                1
 regression             | create_property_graph_tests | g2                  | t2                  | i           |                1
 regression             | create_property_graph_tests | g2                  | t3                  | x           |                1
 regression             | create_property_graph_tests | g3                  | t1                  | a           |                1
 regression             | create_property_graph_tests | g3                  | t3                  | x           |                1
(9 rows)

SELECT * FROM information_schema.pg_edge_table_components ORDER BY property_graph_name, edge_table_alias, edge_end DESC, ordinal_position;
 property_graph_catalog |    property_graph_schema    | property_graph_name | edge_table_alias | vertex_table_alias |  edge_end   | edge_table_column_name | vertex_table_column_name | ordinal_position 
------------------------+-----------------------------+---------------------+------------------+--------------------+-------------+------------------------+--------------------------+------------------
 regression             | create_property_graph_tests | g2                  | e1               | t1                 | SOURCE      | a                      | a                        |                1
 regression             | create_property_graph_tests | g2                  | e1               | t2                 | DESTINATION | i                      | i                        |                1
 regression             | create_property_graph_tests | g2                  | e2               | t1                 | SOURCE      | a                      | a                        |                1
 regression             | create_property_graph_tests | g2                  | e2               | t3                 | DESTINATION | x                      | x                        |                1
 regression             | create_property_graph_tests | g2                  | e2               | t3                 | DESTINATION | t                      | y                        |                2
(5 rows)

SELECT * FROM information_schema.pg_element_table_labels ORDER BY property_graph_name, element_table_alias, label_name;
 property_graph_catalog |    property_graph_schema    | property_graph_name | element_table_alias | label_name 
------------------------+-----------------------------+---------------------+---------------------+------------
 regression             | create_property_graph_tests | g2                  | e1                  | e1
 regression             | create_property_graph_tests | g2                  | e2                  | e2
 regression             | create_property_graph_tests | g2                  | t1                  | t1
 regression             | create_property_graph_tests | g2                  | t2                  | t2
 regression             | create_property_graph_tests | g2                  | t3                  | t3l1
 regression             | create_property_graph_tests | g2                  | t3                  | t3l2
 regression             | create_property_graph_tests | g3                  | t1                  | t1
 regression             | create_property_graph_tests | g3                  | t3                  | t3l1
 regression             | create_property_graph_tests | g3                  | t3                  | t3l2
(9 rows)

SELECT * FROM information_schema.pg_labels ORDER BY property_graph_name, label_name;
 property_graph_catalog |    property_graph_schema    | property_graph_name | label_name 
------------------------+-----------------------------+---------------------+------------
 regression             | create_property_graph_tests | g2                  | e1
 regression             | create_property_graph_tests | g2                  | e2
 regression             | create_property_graph_tests | g2                  | t1
 regression             | create_property_graph_tests | g2                  | t2
 regression             | create_property_graph_tests | g2                  | t3l1
 regression             | create_property_graph_tests | g2                  | t3l2
 regression             | create_property_graph_tests | g3                  | t1
 regression             | create_property_graph_tests | g3                  | t3l1
 regression             | create_property_graph_tests | g3                  | t3l2
(9 rows)

SELECT * FROM information_schema.pg_property_graph_privileges WHERE grantee LIKE 'regress%' ORDER BY property_graph_name;
       grantor       |       grantee       | property_graph_catalog |    property_graph_schema    | property_graph_name | privilege_type | is_grantable 
---------------------+---------------------+------------------------+-----------------------------+---------------------+----------------+--------------
 regress_graph_user1 | regress_graph_user1 | regression             | create_property_graph_tests | g1                  | SELECT         | YES
 regress_graph_user1 | regress_graph_user2 | regression             | create_property_graph_tests | g1                  | SELECT         | NO
(2 rows)

--\dG
-- TODO
\d g1
Property graph "create_property_graph_tests.g1"
 Column | Type 
--------+------

\d+ g1
Property graph "create_property_graph_tests.g1"
 Column | Type | Storage 
--------+------+---------
Property graph definition:
 CREATE PROPERTY GRAPH create_property_graph_tests.g1

DROP TABLE g2;  -- error: wrong object type
ERROR:  "g2" is not a table
HINT:  Use DROP PROPERTY GRAPH to remove a property graph.
DROP PROPERTY GRAPH g2;
DROP PROPERTY GRAPH g2;  -- error: does not exist
ERROR:  property graph "g2" does not exist
DROP PROPERTY GRAPH IF EXISTS g2;
NOTICE:  property graph "g2" does not exist, skipping
DROP SCHEMA create_property_graph_tests CASCADE;
NOTICE:  drop cascades to 7 other objects
DETAIL:  drop cascades to property graph g1
drop cascades to table t1
drop cascades to table t2
drop cascades to table t3
drop cascades to table e1
drop cascades to table e2
drop cascades to property graph g3
DROP ROLE regress_graph_user1, regress_graph_user2;
